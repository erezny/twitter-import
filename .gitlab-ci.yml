stages:
  - build
  - test
  - envsetup
  - deploy

build:
  stage: build
  script:
    - source ~/.nvm/nvm.sh || echo OK
    - nvm use
    - export NPM_CONFIG_LOGLEVEL=error
    - npm cache clean
    - npm config set proxy http://192.168.1.100:19465
    - npm config set https-proxy http://192.168.1.100:19465
    - npm config set strict-ssl false
    - rm -rf node_modules dist tmp
    - npm install -s
    - docker build -q -t "social_graph:test" .
  tags:
    - local

complexity:
  stage: test
  script:
    - docker run --rm=true "social_graph:test" complexity
  tags:
    - local

mocha:
  stage: test
  script:
    - docker run --rm=true --env-file ./docker-env.list "social_graph:test" test
  tags:
    - local

jscs:
  stage: test
  script:
    - docker run --rm=true "social_graph:test" jscs
  tags:
    - local

reset-test-env:
  stage: envsetup
  script:
    - docker-cloud service stop --sync twitter-import-dasbob-test
    - docker run --rm=true "social_graph:test" resetEnvironment
  except:
    - master
  tags:
    - local

deploy-dev:
  stage: deploy
  script:
    - docker tag -f "social_graph:test" erezny/social_graph:test
    - docker push erezny/social_graph:test
  except:
    - master
  tags:
    - local

deploy-prod:
  stage: deploy
  script:
    - docker tag -f "social_graph:test" erezny/social_graph:latest
    - docker push erezny/social_graph:latest
  only:
    - master
  tags:
    - local
